//C++
class Solution {
public:
    int fourSumCount(vector<int>& nums1, vector<int>& nums2, vector<int>& nums3, vector<int>& nums4) {
        int n = nums1.size();
        int count = 0;

        for(int i = 0; i < n; i++){
            for(int j = 0; j < n; j++){
                for(int k = 0; k < n; k++){
                    for(int l = 0; l < n; l++){
                        int sum = nums1[i] + nums2[j] + nums3[k] + nums4[l];

                        if(sum == 0) count++;
                    }
                }
            }
        }
        return count; 
    }
};

//Java
class Solution {
    public int fourSumCount(int[] nums1, int[] nums2, int[] nums3, int[] nums4) {
        int n = nums1.length;
        int count = 0;

        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                for(int k=0; k<n; k++){
                    for(int l=0; l<n; l++){
                        int sum = nums1[i]+nums2[j]+nums3[k]+nums4[l];

                        if(sum == 0) count++;
                    }
                }
            }
        }
        return count; 
    }
}

//Python3
class Solution:
    def fourSumCount(self, nums1: List[int], nums2: List[int], nums3: List[int], nums4: List[int]) -> int:
        n = len(nums1)
        count = 0

        for i in range(n):
            for j in range(n):
                for k in range(n):
                    for l in range(n):
                        sum_val = nums1[i] + nums2[j] + nums3[k] + nums4[l]

                        if sum_val == 0:
                            count += 1

        return count
